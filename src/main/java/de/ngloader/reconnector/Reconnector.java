package de.ngloader.reconnector;

import org.apache.logging.log4j.Logger;

import de.ngloader.reconnector.gui.DisconnectedScreen;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.GuiDisconnected;
import net.minecraft.client.multiplayer.ServerList;
import net.minecraftforge.client.event.GuiScreenEvent;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.fml.common.FMLCommonHandler;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventHandler;
import net.minecraftforge.fml.common.ModMetadata;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent.ClientTickEvent;
import net.minecraftforge.fml.common.network.FMLNetworkEvent.ClientConnectedToServerEvent;

@Mod(modid = Reconnector.MODID, name = Reconnector.NAME, version = Reconnector.VERSION)
public class Reconnector {

	public static final String MODID = "reconnector";
	public static final String NAME = "Reconnector";
	public static final String VERSION = "1.0";

	private static Logger logger;

	private static ServerList savedServerList = new ServerList(Minecraft.getMinecraft());

	private DisconnectedScreen disconnectedScreen;

	@EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		logger = event.getModLog();

		ModMetadata modMetadata = event.getModMetadata();
		modMetadata.autogenerated = false;
		modMetadata.name = "Reconnector";
		modMetadata.description = "Reconnect every 5seconds to the last server";
		modMetadata.credits = "Dragon0697";
		modMetadata.authorList.add("NgLoader");
	}

	@EventHandler
	public void init(FMLInitializationEvent event) {
		MinecraftForge.EVENT_BUS.register(this);
		FMLCommonHandler.instance().bus().register(this);
		logger.info("Adding to event bus");
	}

	/*
	@SubscribeEvent(priority = EventPriority.HIGHEST, receiveCanceled = true)
	public void onServer(ClientDisconnectionFromServerEvent event) {
		savedServerList.loadServerList();

		logger.info("Waiting 5seconds, befor reconnecting");

		try {
			Thread.sleep(5000);
		} catch (InterruptedException e) {
			logger.error(e);
		}

		if(savedServerList.countServers() != 0) {
			ServerData serverData = savedServerList.getServerData(1);
			logger.info("Connecting to \"" + serverData.serverName + "\"");
			Minecraft.getMinecraft().displayGuiScreen(new GuiConnecting(Minecraft.getMinecraft().currentScreen, Minecraft.getMinecraft(), serverData));
		}
			logger.info("No server was found in serverlist");
	}
	*/

	@SubscribeEvent
	public void onClientTick(ClientTickEvent evnet) {
		if(this.disconnectedScreen != null)
			this.disconnectedScreen.tick();
	}

	@SubscribeEvent
	public void onConnect(ClientConnectedToServerEvent event) {
		System.out.print("test");
		System.out.print(event.getConnectionType());
	}

	@SubscribeEvent
	public void onGuiScreen(GuiScreenEvent event) {
		if(event.getGui() instanceof GuiDisconnected) {
			savedServerList.loadServerList();
			this.disconnectedScreen = new DisconnectedScreen(savedServerList.getServerData(0));
			Minecraft.getMinecraft().displayGuiScreen(this.disconnectedScreen);
		}
	}
}